# -*- coding: utf-8 -*-
"""Read_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ojo0F_fXXYaJO41nMHvrRlQuD4cjySXW
"""

!pip install pyserial

import time
import numpy as np
import serial

ser = serial.Serial('/dev/ttyACM0', 9600)  # Cambia 'COM3' con la tua porta corretta
time.sleep(2)  # Attendi che la connessione si stabilisca

buffer = ""  # Buffer per accumulare i dati

while True:
    if ser.in_waiting > 0:
        # Leggi i dati disponibili dalla porta seriale
        data = ser.read(ser.in_waiting).decode('utf-8')
        buffer += data

        # Controlla se il buffer contiene un messaggio completo
        while '*' in buffer and '#' in buffer:
            start_index = buffer.find('*')
            end_index = buffer.find('#', start_index)

            if end_index != -1:
                # Estrai il messaggio completo
                message = buffer[start_index:end_index+1]
                buffer = buffer[end_index+1:]  # Mantieni i dati rimanenti nel buffer

                # Verifica se il messaggio inizia con '*' e finisce con '#'
                if message.startswith('*') and message.endswith('#'):
                    # Rimuovi i delimitatori e dividi i dati
                    content = message[1:-1]  # Rimuovi '*' e '#'
                    data = content.split(',')

                    if len(data) == 6:  # Assicurati che ci siano 6 valori
                        ax, ay, az, gx, gy, gz = map(int, data)
                        print(f"ax: {ax}, ay: {ay}, az: {az}, gx: {gx}, gy: {gy}, gz: {gz}")
                    else:
                        print("Errore: numero di valori ricevuti diverso da 6")
                else:
                    print("Errore: il messaggio non Ã¨ formattato correttamente")

    time.sleep(1)  # Aggiungi un piccolo ritardo per evitare di saturare la CPU

